{
  "spec_version": "1.0.0",
  "name": "Business Workflow Actions",
  "default_llm_model": "bedrock.claude-sonnet-3.5",
  "actions": [
    {
      "type": "ingest_docs",
      "title": "Ingest Docs",
      "description": "Load documents from upload, S3, or local path and normalize to text + metadata.",
      "requires": [],
      "produces": ["documents"],
      "inputs": {},
      "params": {
        "source": { "type": "string", "enum": ["upload", "s3", "local"], "default": "s3" },
        "path_or_glob": { "type": "string", "required": false, "description": "e.g., s3://bucket/path/*.pdf" },
        "include_types": { "type": "array", "items": { "type": "string" }, "default": ["pdf","docx","txt"] },
        "exclude_glob": { "type": "array", "items": { "type": "string" }, "default": [] },
        "max_files": { "type": "integer", "minimum": 1, "default": 100 },
        "recursive": { "type": "boolean", "default": true },
        "ocr": { "type": "boolean", "default": false }
      },
      "output_schema": {
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "doc_id": { "type": "string" },
              "uri": { "type": "string" },
              "text": { "type": "string" },
              "metadata": {
                "type": "object",
                "properties": {
                  "mime_type": { "type": "string" },
                  "pages": { "type": "integer" },
                  "size_bytes": { "type": "integer" },
                  "sha256": { "type": "string" },
                  "created_at": { "type": "string" }
                },
                "required": ["mime_type"]
              }
            },
            "required": ["doc_id", "uri", "text", "metadata"]
          }
        }
      },
      "validation_rules": [
        "If source in ['s3','local'] then path_or_glob must be provided",
        "include_types must not be empty"
      ],
      "errors": ["PATH_NOT_FOUND", "FILETYPE_UNSUPPORTED", "READ_ERROR"],
      "metrics": ["files_seen", "files_loaded", "bytes_total", "duration_ms"]
    },
    {
      "type": "classify_intent",
      "title": "Classify Intent",
      "description": "Determine the business goal/topic to guide downstream steps.",
      "requires": [],
      "produces": ["intent"],
      "inputs": { "brief": { "type": "string", "required": false } },
      "params": {
        "labels": { "type": "array", "items": { "type": "string" }, "default": ["supplier_risk","policy_review","invoice_audit"] },
        "llm_model": { "type": "string", "default": "auto" },
        "confidence_threshold": { "type": "number", "minimum": 0, "maximum": 1, "default": 0.6 }
      },
      "output_schema": {
        "intent": {
          "type": "object",
          "properties": {
            "label": { "type": "string" },
            "confidence": { "type": "number" },
            "rationale": { "type": "string" },
            "needs_review": { "type": "boolean" }
          },
          "required": ["label", "confidence"]
        }
      },
      "validation_rules": [
        "If confidence < confidence_threshold then set needs_review=true"
      ],
      "errors": ["NO_SIGNAL"],
      "metrics": ["confidence", "tokens", "duration_ms"]
    },
    {
      "type": "extract_key_terms",
      "title": "Extract Key Terms",
      "description": "Find specific fields/clauses in documents and return best snippets.",
      "requires": ["documents"],
      "produces": ["extracted_terms"],
      "inputs": {},
      "params": {
        "schema": { "type": "array", "items": { "type": "string" }, "default": ["termination","payment_terms","penalties"] },
        "method": { "type": "string", "enum": ["regex","llm","hybrid"], "default": "hybrid" },
        "regex_map": { "type": "object", "additionalProperties": { "type": "string" }, "required": false },
        "top_k_snippets": { "type": "integer", "minimum": 1, "default": 3 }
      },
      "output_schema": {
        "extracted_terms": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "status": { "type": "string", "enum": ["found","missing","ambiguous"], "default": "missing" },
              "values": { "type": "array", "items": { "type": "string" } },
              "snippets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": { "type": "string" },
                    "page": { "type": "integer" },
                    "start": { "type": "integer" },
                    "end": { "type": "integer" },
                    "score": { "type": "number" }
                  },
                  "required": ["text"]
                }
              }
            },
            "required": ["status","values","snippets"]
          }
        }
      },
      "validation_rules": ["All fields in schema must exist in extracted_terms map"],
      "errors": ["NO_DOCUMENTS", "EXTRACTION_FAILED"],
      "metrics": ["fields_requested", "fields_found", "tokens", "duration_ms"]
    },
    {
      "type": "summarize_findings",
      "title": "Summarize Findings",
      "description": "Produce a concise human summary of the key findings.",
      "requires": ["extracted_terms"],
      "produces": ["summary"],
      "inputs": {},
      "params": {
        "style": { "type": "string", "enum": ["bullet","narrative"], "default": "bullet" },
        "length": { "type": "string", "enum": ["short","medium","long"], "default": "short" },
        "tone": { "type": "string", "enum": ["neutral","executive","detailed"], "default": "neutral" },
        "llm_model": { "type": "string", "default": "auto" }
      },
      "output_schema": { "summary": { "type": "string" } },
      "validation_rules": ["summary must not be empty"],
      "errors": ["SUMMARIZATION_FAILED"],
      "metrics": ["tokens", "duration_ms"]
    },
    {
      "type": "score_risk",
      "title": "Score Risk",
      "description": "Compute a 0â€“100 risk score using deterministic rules; optionally add LLM rationale.",
      "requires": ["extracted_terms"],
      "produces": ["risk_score"],
      "inputs": {},
      "params": {
        "ruleset": { "type": "string", "description": "ID or URI of rules JSON/CSV", "default": "finance_risk_v1" },
        "llm_justify": { "type": "boolean", "default": true },
        "bounds": {
          "type": "object",
          "properties": { "min": { "type": "number", "default": 0 }, "max": { "type": "number", "default": 100 } }
        }
      },
      "output_schema": {
        "risk_score": {
          "type": "object",
          "properties": {
            "score": { "type": "number" },
            "drivers": { "type": "array", "items": { "type": "string" } },
            "rationale": { "type": "string" }
          },
          "required": ["score","drivers"]
        }
      },
      "validation_rules": [
        "score must be between bounds.min and bounds.max"
      ],
      "errors": ["RULESET_NOT_FOUND", "SCORING_FAILED"],
      "metrics": ["score", "drivers_count", "tokens", "duration_ms"]
    },
    {
      "type": "validate_evidence",
      "title": "Validate Evidence",
      "description": "Check coverage of required evidence against extracted terms and documents.",
      "requires": ["extracted_terms","documents"],
      "produces": ["evidence_report"],
      "inputs": {},
      "params": {
        "checklist_id": { "type": "string", "default": "supplier_finance_minimum" },
        "min_coverage": { "type": "number", "minimum": 0, "maximum": 1, "default": 0.8 },
        "require_snippet": { "type": "boolean", "default": true }
      },
      "output_schema": {
        "evidence_report": {
          "type": "object",
          "properties": {
            "coverage": { "type": "number" },
            "present_items": { "type": "array", "items": { "type": "string" } },
            "missing_items": { "type": "array", "items": { "type": "string" } },
            "examples": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": { "item": { "type": "string" }, "snippet": { "type": "string" }, "doc_id": { "type": "string" } },
                "required": ["item"]
              }
            },
            "needs_fix": { "type": "boolean" }
          },
          "required": ["coverage","present_items","missing_items"]
        }
      },
      "validation_rules": [
        "If coverage < min_coverage then set needs_fix=true"
      ],
      "errors": ["CHECKLIST_NOT_FOUND"],
      "metrics": ["coverage", "missing_count", "duration_ms"]
    },
    {
      "type": "generate_report",
      "title": "Generate Report",
      "description": "Render a stakeholder-ready PDF/DOCX with summary, findings, score, and next steps.",
      "requires": ["summary","risk_score","evidence_report"],
      "produces": ["report_file","report_meta"],
      "inputs": {},
      "params": {
        "format": { "type": "string", "enum": ["pdf","docx"], "default": "pdf" },
        "sections": { "type": "array", "items": { "type": "string" }, "default": ["summary","findings","risk_score","next_steps"] },
        "template_id": { "type": "string", "required": false },
        "include_pii_scan": { "type": "boolean", "default": true },
        "out_path": { "type": "string", "required": false }
      },
      "output_schema": {
        "report_file": {
          "type": "object",
          "properties": { "uri": { "type": "string" }, "pages": { "type": "integer" }, "created_at": { "type": "string" } },
          "required": ["uri"]
        },
        "report_meta": {
          "type": "object",
          "properties": { "template_id": { "type": "string" }, "sections": { "type": "array", "items": { "type": "string" } } }
        }
      },
      "validation_rules": [
        "sections must contain at least 'summary' and 'next_steps'"
      ],
      "errors": ["TEMPLATE_NOT_FOUND", "RENDER_FAILED"],
      "metrics": ["render_time_ms", "pages", "pii_hits"]
    },
    {
      "type": "notify",
      "title": "Notify",
      "description": "Send the result to recipients via Email/Slack/Webhook.",
      "requires": ["report_file"],
      "produces": ["notification_receipt"],
      "inputs": {},
      "params": {
        "channel": { "type": "string", "enum": ["email","slack","webhook"], "default": "email" },
        "to": { "type": "array", "items": { "type": "string" }, "default": [] },
        "subject": { "type": "string", "default": "Workflow Report" },
        "message_template": { "type": "string", "default": "Report ready: {{ report_file.uri }}" },
        "attach_file": { "type": "boolean", "default": false }
      },
      "output_schema": {
        "notification_receipt": {
          "type": "object",
          "properties": { "status": { "type": "string" }, "provider_id": { "type": "string" }, "timestamp": { "type": "string" } },
          "required": ["status"]
        }
      },
      "validation_rules": ["At least one recipient must be present in 'to'"],
      "errors": ["DELIVERY_FAILED", "INVALID_RECIPIENT"],
      "metrics": ["recipients_count", "delivery_status", "duration_ms"]
    },
    {
      "type": "store_results",
      "title": "Store Results",
      "description": "Persist JSON outcomes and artifacts to S3 or DB for auditability.",
      "requires": ["summary","risk_score","evidence_report","report_file"],
      "produces": ["storage_receipts"],
      "inputs": {},
      "params": {
        "store": { "type": "string", "enum": ["s3","db"], "default": "s3" },
        "path_or_table": { "type": "string", "default": "s3://workflow-outputs/" },
        "run_id": { "type": "string", "required": false },
        "metadata": { "type": "object", "required": false }
      },
      "output_schema": {
        "storage_receipts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": { "target": { "type": "string" }, "id_or_uri": { "type": "string" }, "status": { "type": "string" } },
            "required": ["target","status"]
          }
        }
      },
      "validation_rules": ["path_or_table must be a valid URI or table name"],
      "errors": ["WRITE_FAILED", "PERMISSION_DENIED"],
      "metrics": ["objects_written", "bytes_written", "duration_ms"]
    },
    {
      "type": "review_queue",
      "title": "Review Queue",
      "description": "Create a human review task when certain conditions are met.",
      "requires": ["risk_score","evidence_report"],
      "produces": ["review_ticket"],
      "inputs": {},
      "params": {
        "assignee": { "type": "string", "required": false },
        "priority": { "type": "string", "enum": ["low","med","high"], "default": "med" },
        "enqueue_when": {
          "type": "object",
          "properties": {
            "score_gt": { "type": "number", "required": false },
            "coverage_lt": { "type": "number", "required": false },
            "always": { "type": "boolean", "default": false }
          }
        }
      },
      "output_schema": {
        "review_ticket": {
          "type": "object",
          "properties": {
            "created": { "type": "boolean" },
            "id": { "type": "string" },
            "url": { "type": "string" },
            "reason": { "type": "string" }
          },
          "required": ["created"]
        }
      },
      "validation_rules": [
        "If enqueue_when.always=true OR score > score_gt OR coverage < coverage_lt then created=true"
      ],
      "errors": ["QUEUE_UNAVAILABLE", "ASSIGNEE_NOT_FOUND"],
      "metrics": ["tickets_created", "sla_due_at", "duration_ms"]
    },
    {
      "type": "unified_document_analysis",
      "title": "Unified Document Analysis",
      "description": "Extract document content with TidyLLM, generate embeddings, then analyze structure and content with AI in a single step.",
      "requires": [],
      "produces": ["extracted_content", "document_embeddings", "ai_analysis"],
      "inputs": {},
      "params": {
        "document_source": { "type": "string", "enum": ["upload", "s3", "local"], "default": "upload" },
        "document_path": { "type": "string", "required": false, "description": "Path to document file" },
        "extract_tables": { "type": "boolean", "default": true },
        "extract_images": { "type": "boolean", "default": false },
        "embedding_model": { "type": "string", "default": "text-embedding-3-small" },
        "chunk_size": { "type": "integer", "default": 1000 },
        "overlap": { "type": "integer", "default": 200 },
        "analysis_depth": { "type": "string", "enum": ["basic", "comprehensive"], "default": "comprehensive" },
        "llm_model": { "type": "string", "default": "auto" }
      },
      "output_schema": {
        "extracted_content": {
          "type": "object",
          "properties": {
            "text": { "type": "string" },
            "metadata": {
              "type": "object",
              "properties": {
                "filename": { "type": "string" },
                "file_size": { "type": "integer" },
                "page_count": { "type": "integer" },
                "word_count": { "type": "integer" }
              }
            }
          },
          "required": ["text", "metadata"]
        },
        "document_embeddings": {
          "type": "object",
          "properties": {
            "embeddings": { "type": "array", "items": { "type": "number" } },
            "chunks": { "type": "array", "items": { "type": "string" } },
            "model_used": { "type": "string" }
          },
          "required": ["embeddings", "chunks"]
        },
        "ai_analysis": {
          "type": "object",
          "properties": {
            "document_type": { "type": "string" },
            "structure_quality_score": { "type": "number" },
            "section_hierarchy": { "type": "array" },
            "content_quality": {
              "type": "object",
              "properties": {
                "clarity_score": { "type": "number" },
                "completeness_score": { "type": "number" },
                "readability_level": { "type": "string" }
              }
            },
            "confidence_score": { "type": "number" }
          },
          "required": ["document_type", "structure_quality_score", "confidence_score"]
        }
      },
      "validation_rules": [
        "chunk_size must be between 100 and 4000",
        "overlap must be less than chunk_size",
        "confidence_score must be above 0.7"
      ],
      "errors": ["DOCUMENT_NOT_FOUND", "EXTRACTION_FAILED", "EMBEDDING_FAILED", "AI_ANALYSIS_FAILED"],
      "metrics": ["extraction_time_ms", "embedding_time_ms", "analysis_time_ms", "total_tokens", "confidence_score"]
    },
    {
      "type": "unified_content_intelligence",
      "title": "Unified Content Intelligence",
      "description": "Perform semantic analysis with TidyLLM, extract entities, then classify and identify themes with AI.",
      "requires": ["extracted_content", "document_embeddings"],
      "produces": ["semantic_analysis", "extracted_entities", "content_classification"],
      "inputs": {},
      "params": {
        "entity_types": { "type": "array", "items": { "type": "string" }, "default": ["PERSON", "ORG", "GPE", "DATE", "MONEY"] },
        "confidence_threshold": { "type": "number", "minimum": 0, "maximum": 1, "default": 0.7 },
        "include_sentiment": { "type": "boolean", "default": true },
        "detect_topics": { "type": "boolean", "default": true },
        "classification_labels": { "type": "array", "items": { "type": "string" }, "default": ["research_paper", "technical_report", "business_document", "legal_document"] },
        "min_themes": { "type": "integer", "default": 2 },
        "llm_model": { "type": "string", "default": "auto" }
      },
      "output_schema": {
        "semantic_analysis": {
          "type": "object",
          "properties": {
            "topics": { "type": "array", "items": { "type": "string" } },
            "sentiment_score": { "type": "number" },
            "complexity_score": { "type": "number" },
            "coherence_score": { "type": "number" }
          },
          "required": ["topics", "sentiment_score"]
        },
        "extracted_entities": {
          "type": "object",
          "properties": {
            "entities": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": { "type": "string" },
                  "label": { "type": "string" },
                  "confidence": { "type": "number" },
                  "start": { "type": "integer" },
                  "end": { "type": "integer" }
                },
                "required": ["text", "label", "confidence"]
              }
            },
            "entity_relationships": { "type": "array" }
          },
          "required": ["entities"]
        },
        "content_classification": {
          "type": "object",
          "properties": {
            "document_class": { "type": "string" },
            "confidence": { "type": "number" },
            "identified_themes": { "type": "array", "items": { "type": "string" } },
            "key_concepts": { "type": "array", "items": { "type": "string" } },
            "content_quality_assessment": {
              "type": "object",
              "properties": {
                "relevance_score": { "type": "number" },
                "depth_score": { "type": "number" }
              }
            }
          },
          "required": ["document_class", "confidence", "identified_themes"]
        }
      },
      "validation_rules": [
        "At least min_themes themes must be identified",
        "Entity confidence must be above confidence_threshold",
        "Classification confidence must be above 0.6"
      ],
      "errors": ["SEMANTIC_ANALYSIS_FAILED", "ENTITY_EXTRACTION_FAILED", "CLASSIFICATION_FAILED"],
      "metrics": ["entities_found", "themes_identified", "analysis_confidence", "processing_time_ms"]
    },
    {
      "type": "unified_insight_synthesis",
      "title": "Unified Insight Synthesis",
      "description": "Create vector index with TidyLLM, perform similarity analysis, then generate comprehensive insights and recommendations with AI.",
      "requires": ["semantic_analysis", "extracted_entities", "content_classification", "document_embeddings"],
      "produces": ["vector_analysis", "strategic_insights", "final_report"],
      "inputs": {},
      "params": {
        "index_type": { "type": "string", "enum": ["faiss", "simple"], "default": "faiss" },
        "similarity_threshold": { "type": "number", "minimum": 0, "maximum": 1, "default": 0.8 },
        "insight_focus": { "type": "array", "items": { "type": "string" }, "default": ["business_value", "risks", "opportunities"] },
        "recommendation_count": { "type": "integer", "minimum": 1, "default": 5 },
        "include_implementation": { "type": "boolean", "default": true },
        "report_format": { "type": "string", "enum": ["executive", "detailed", "technical"], "default": "executive" },
        "llm_model": { "type": "string", "default": "auto" }
      },
      "output_schema": {
        "vector_analysis": {
          "type": "object",
          "properties": {
            "similarity_scores": { "type": "array", "items": { "type": "number" } },
            "content_clusters": { "type": "array" },
            "anomalies_detected": { "type": "array", "items": { "type": "string" } },
            "quality_metrics": {
              "type": "object",
              "properties": {
                "coherence_score": { "type": "number" },
                "completeness_score": { "type": "number" }
              }
            }
          },
          "required": ["similarity_scores", "quality_metrics"]
        },
        "strategic_insights": {
          "type": "object",
          "properties": {
            "key_findings": { "type": "array", "items": { "type": "string" } },
            "business_implications": { "type": "array", "items": { "type": "string" } },
            "risk_assessment": {
              "type": "object",
              "properties": {
                "identified_risks": { "type": "array", "items": { "type": "string" } },
                "risk_level": { "type": "string", "enum": ["low", "medium", "high"] }
              }
            },
            "opportunities": { "type": "array", "items": { "type": "string" } }
          },
          "required": ["key_findings", "business_implications"]
        },
        "final_report": {
          "type": "object",
          "properties": {
            "executive_summary": { "type": "string" },
            "actionable_recommendations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "recommendation": { "type": "string" },
                  "priority": { "type": "string", "enum": ["low", "medium", "high"] },
                  "effort": { "type": "string", "enum": ["low", "medium", "high"] },
                  "timeline": { "type": "string" }
                },
                "required": ["recommendation", "priority"]
              }
            },
            "implementation_roadmap": { "type": "array", "items": { "type": "string" } },
            "confidence_score": { "type": "number" }
          },
          "required": ["executive_summary", "actionable_recommendations", "confidence_score"]
        }
      },
      "validation_rules": [
        "At least recommendation_count recommendations must be generated",
        "Confidence score must be above 0.75",
        "Executive summary must not be empty"
      ],
      "errors": ["VECTOR_INDEX_FAILED", "SIMILARITY_ANALYSIS_FAILED", "INSIGHT_GENERATION_FAILED"],
      "metrics": ["insights_generated", "recommendations_count", "analysis_confidence", "total_processing_time_ms"]
    }
  ],
  "artifacts": {
    "documents": "Array of normalized documents (text + metadata).",
    "intent": "Detected business intent with confidence.",
    "extracted_terms": "Map of requested fields to values and supporting snippets.",
    "summary": "Human-readable summary text.",
    "risk_score": "Numeric score 0â€“100 with drivers and optional rationale.",
    "evidence_report": "Coverage metrics, present/missing items, examples, needs_fix flag.",
    "report_file": "Rendered report artifact (URI and metadata).",
    "report_meta": "Extra info about the report generation.",
    "notification_receipt": "Receipt from messaging provider.",
    "storage_receipts": "List of persisted objects/rows and their URIs/IDs.",
    "review_ticket": "Queue ticket record or a created=false stub.",
    "extracted_content": "Document text and metadata extracted with TidyLLM.",
    "document_embeddings": "Vector embeddings of document content chunks.",
    "ai_analysis": "AI-generated document structure and quality analysis.",
    "semantic_analysis": "TidyLLM semantic analysis with topics and sentiment.",
    "extracted_entities": "Named entities extracted from document content.",
    "content_classification": "AI classification of document type and themes.",
    "vector_analysis": "Vector similarity analysis and content clustering.",
    "strategic_insights": "Business insights and risk assessment.",
    "final_report": "Executive summary with actionable recommendations."
  }
}
